buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/plugins-release"}
		maven { url "http://maven.aliyun.com/nexus/content/groups/public"}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
	}
}


repositories {
	mavenCentral()
	maven { url "http://maven.aliyun.com/nexus/content/repositories/snapshots"}
}

/**设置所有的子项目插件依赖*/
allprojects {
	apply plugin: 'idea'
	group = 'com.dengjk'
	version = '0.1.0-SNAPSHOT'
}

/**锁定子项目的版本*/
subprojects {
	ext {
		mybatisSpringBootVersion='1.2.0'
		mybatisVersion = '3.2.8'
		mysqlVersion = '5.1.38'
		okhttpVersion = '3.4.1'
		druidVersion = '1.0.18'
		commonsLang3Version = '3.4'
		snappyVersion = '1.1.2.1'
		log4jAPIVersion = '2.5'
		nekoHtmlVersion = '1.9.22'
		httpclientVersion = '4.5.2'
		feignHttpclientVersion ='8.17.0'
		swagger2Version = '2.2.2'
		springIntegrationKafkaVersion = '2.0.1.RELEASE'
		springKafkaCoreVersion ='4.3.6.RELEASE'
		springKafkaVersion = '1.1.0.RELEASE'
		fastjsonVersion = '1.2.16'
		springDataHadoopVersion='2.4.0.RELEASE' //2.1.2.RELEASE
		hbaseClientVersion ='1.2.4'
		hadoopVersion = '2.7.3'
	}
	apply plugin: 'java'
	apply plugin: 'idea'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

	repositories {
		mavenLocal()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/plugins-release"}
		maven { url "http://maven.aliyun.com/nexus/content/repositories/snapshots"}
		mavenCentral()
	}

	sourceSets {
		main {
			java.srcDir('src/main/java')
			resources.srcDir('src/main/resources')
		}
	}
}
